SET FOREIGN_KEY_CHECKS=0;
DROP TABLE IF EXISTS `USER`;
SET FOREIGN_KEY_CHECKS=1;

CREATE TABLE `USER` (
	`userID` int auto_increment PRIMARY KEY,
	`fname` varchar(50) NOT NULL,
	`lname` varchar(40) NOT NULL,
	`profPic` varchar(255),
    `work` varchar(40),
    `education` varchar(40),
	`biography` text,
	`birthday` DATE NOT NULL,
	`address` varchar(255) ,
	`city` varchar(255) ,
	`country` varchar(255),
	`phone` varchar(40)
);

SET FOREIGN_KEY_CHECKS=0;
DROP TABLE IF EXISTS `CATEGORY`;
SET FOREIGN_KEY_CHECKS=1;

CREATE TABLE `CATEGORY` (
	`categoryID` int auto_increment PRIMARY KEY,
	`topic` varchar(255) NOT NULL,
	`total_documents` int NOT NULL default 0
);


SET FOREIGN_KEY_CHECKS=0;
DROP TABLE IF EXISTS `DOCUMENT`;
SET FOREIGN_KEY_CHECKS=1;

CREATE TABLE `DOCUMENT` (
	`documentID` int auto_increment PRIMARY KEY,
	`abstract` TEXT ,
	`name` varchar(50),
    `file` varchar(255),
    `authNames` varchar(255),
	`views` int,
	`date` DATE
);


SET FOREIGN_KEY_CHECKS=0;
DROP TABLE IF EXISTS `LOGIN`;
SET FOREIGN_KEY_CHECKS=1;

CREATE TABLE `LOGIN` (
	`loginID` int auto_increment PRIMARY KEY,
	`username` varchar(255) NOT NULL,
	`Password` varchar(255) NOT NULL UNIQUE,
	`email` varchar(255) NOT NULL UNIQUE,
	`logUserID` int NOT NULL,
    CONSTRAINT `login_fk` FOREIGN KEY (`logUserID`) REFERENCES `USER`(`UserID`) ON DELETE CASCADE ON UPDATE CASCADE
);


SET FOREIGN_KEY_CHECKS=0;
DROP TABLE IF EXISTS `SAVES`;
SET FOREIGN_KEY_CHECKS=1;

CREATE TABLE `SAVES` (
	`sUserID` int ,
	`sDocumentID` int ,
	CONSTRAINT `saveFK0` FOREIGN KEY (`sUserID`) REFERENCES `USER`(`userID`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT `saveFK1` FOREIGN KEY (`sDocumentID`) REFERENCES `DOCUMENT`(`documentID`) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (`sUserID`,`sDocumentID`)
);

SET FOREIGN_KEY_CHECKS=0;
DROP TABLE IF EXISTS `ADDITION`;
SET FOREIGN_KEY_CHECKS=1;

CREATE TABLE `ADDITION` (
	`additionID` int auto_increment PRIMARY KEY,
	`date` DATE NOT NULL,
	`adUserID` int,
	`adDocumentID` int,
	CONSTRAINT `additionFK0` FOREIGN KEY (`adUserID`) REFERENCES `USER`(`UserID`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT `additionFK1` FOREIGN KEY (`adDocumentID`) REFERENCES `DOCUMENT`(`documentID`) ON DELETE CASCADE ON UPDATE CASCADE

);


SET FOREIGN_KEY_CHECKS=0;
DROP TABLE IF EXISTS `LIKES`;
SET FOREIGN_KEY_CHECKS=1;

CREATE TABLE `LIKES` (
	`lCategoryID` int,
	`lUserID` int,
	CONSTRAINT `likesFK0` FOREIGN KEY (`lUserID`) REFERENCES `USER`(`UserID`) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT `likesFK1` FOREIGN KEY (`lCategoryID`) REFERENCES `CATEGORY`(`CategoryID`) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (`lCategoryID`,`lUserID`)
);

SET FOREIGN_KEY_CHECKS=0;
DROP TABLE IF EXISTS `BELONG`;
SET FOREIGN_KEY_CHECKS=1;

CREATE TABLE `BELONG` (
	`bCategoryID` int,
	`bDocumentID` int,
	CONSTRAINT `belongFK0` FOREIGN KEY (`bDocumentID`) REFERENCES `DOCUMENT`(`documentID`) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT `belongFK1` FOREIGN KEY (`bCategoryID`) REFERENCES `CATEGORY`(`CategoryID`) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY (`bCategoryID`,`bDocumentID`)
);

SET FOREIGN_KEY_CHECKS=0;
DROP TABLE IF EXISTS `NOTIFICATION`;
SET FOREIGN_KEY_CHECKS=1;

CREATE TABLE `NOTIFICATION` (
	`notificationID` int auto_increment PRIMARY KEY,
	`type` varchar(255) NOT NULL,
	`nUserID` int,
	CONSTRAINT `notificationFK` FOREIGN KEY (`nUserID`) REFERENCES `USER`(`UserID`) ON DELETE CASCADE ON UPDATE CASCADE
);
